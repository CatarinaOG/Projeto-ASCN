- name: create k8s namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1 
      kind: Namespace
      metadata:
        name: ascn-cluster


- name: Mysql Persistent Volume Claim for Ghost
  kubernetes.core.k8s:
    state: present
    template: ../templates/ghost-pvc.yml

- name: app ghost service 
  kubernetes.core.k8s:
    state: present
    src: ../templates/ghost-service.yml

- name: app ghost deployment
  kubernetes.core.k8s:
    state: present
    namespace: ascn-cluster
    template: ../templates/ghost-deployment.yml
    

- name: run kubectl to retreive external IP - Wait for task to complete
  shell: "kubectl get -n {{ mynamespace }} service ghost-service -o wide | awk '{ print $4}' |  grep -v EXT"
  register: k_ext_ip
  until: k_ext_ip.stdout != ""
  retries: 2
  delay: 5

- name: Updating Inventory
  lineinfile: 
    dest: inventory/gcp.yml
    regexp: 'ghost_ip:.*$'
    line: '  ghost_ip: {{ k_ext_ip.stdout }}'
    state: present
    backrefs: yes

- name: get mysql pod name
  shell: 'kubectl get pod -n {{ mynamespace }} -l app=mysql -o jsonpath="{.items[0].metadata.name}"'
  register: mysql_pod_name

- name: get ghost pod name
  shell: 'kubectl get pod -n {{ mynamespace }} -l app=ghost -o jsonpath="{.items[0].metadata.name}"'
  register: ghost_pod_name


- name: Create Admin
  command: kubectl exec "{{ mysql_pod_name.stdout_lines[0] }}" -n "{{ mynamespace }}" -- mysql -u "{{ ghost_user }}" -p"{{ ghost_pass }}" -e "update ghost.users set name='{{ admin_name }}', password='{{ admin_pass }}', email='{{ admin_email }}', status='active' where id=1;"  
  register: result
  until: result is succeeded
  retries: 3
  delay: 40
